@model ListaCompra.Models.ItemCompra

@{
    ViewData["Title"] = "Añadir Artículo";

    var category = "";
    if (Context.Request.QueryString.HasValue)
    {
        category = System.Web.HttpUtility.ParseQueryString(Context.Request.QueryString.Value).Get("categoria");
        ViewData["Title"] = "Historial -" + category;
    }

}

<h1>Añadir Artículo</h1>
<h4>@category</h4>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateItem">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nota" class="control-label"></label>
                <input asp-for="Nota" class="form-control" />
                <span asp-validation-for="Nota" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label asp-for="Prioridad" class="form-check-label">
                    <input class="form-check-input" asp-for="Prioridad" /> @Html.DisplayNameFor(model => model.Prioridad)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" style="background-color:aquamarine" value="Create" class="btn btn-primary" asp-action="createItem" asp-route-categoria="@category" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
